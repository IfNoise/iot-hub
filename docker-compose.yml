services:
  # EMQX MQTT Broker with mTLS support - optimized
  emqx:
    image: emqx/emqx:5.3.0
    container_name: emqx-mtls
    restart: unless-stopped

    ports:
      - '1883:1883'
      - '8883:8883'
      - '18083:18083'
      - '8083:8083'

    environment:
      - EMQX_NAME=emqx-mtls
      - EMQX_HOST=127.0.0.1
      - EMQX_NODE__COOKIE=emqxsecretcookie
      - EMQX_DASHBOARD__DEFAULT_USERNAME=admin
      - EMQX_DASHBOARD__DEFAULT_PASSWORD=iot-hub-admin
      - EMQX_LOG__CONSOLE_HANDLER__LEVEL=debug

    volumes:
      - iot-hub-certs:/opt/emqx/etc/certs:ro
      - ./emqx-mtls.conf:/opt/emqx/etc/emqx.conf:ro
      - emqx-data:/opt/emqx/data
      - emqx-log:/opt/emqx/log

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

    healthcheck:
      test: ['CMD', '/opt/emqx/bin/emqx_ctl', 'status']
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s

    networks:
      - iot-network

  # IoT Hub Backend - optimized
  iot-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    container_name: iot-hub-backend
    working_dir: /workspace
    # user: '1000:1000' # Временно отключаем, пока не решим проблемы с правами
    command:
      [
        'sh',
        '-c',
        'npx nx build @iot-hub/backend && node dist/apps/backend/src/main.js',
      ]
    ports:
      - '3000:3000'

    environment:
      - NODE_ENV=development
      - DOCKER=true
      - NODE_OPTIONS=--max-old-space-size=1536 --experimental-specifier-resolution=node
      - PORT=3000
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=iot_user
      - DATABASE_PASSWORD=iot_password
      - DATABASE_NAME=iot_hub
      - DB_SSL=false
      - JWT_SECRET=your-super-secret-jwt-key-for-production
      - LOG_LEVEL=debug
      - MQTT_BROKER_URL=mqtt://emqx:1883
      - MQTT_HOST=emqx
      - MQTT_PORT=1883
      - MQTT_SECURE_PORT=8883
      - MQTT_CONNECT_TIMEOUT=30000
      - MQTT_RECONNECT_PERIOD=5000
      - MQTT_MAX_RECONNECT_ATTEMPTS=10
      - KEYCLOAK_URL=
      - KEYCLOAK_REALM=
      - LOKI_ENABLED=true # Включаем Loki для логирования
      - LOKI_LABELS=service:iot-hub-backend

    volumes:
      - .:/workspace:cached
      - /workspace/node_modules # ❗️Важно: НЕ перетираем node_modules
      - nx-cache:/workspace/.nx
      - iot-hub-certs:/workspace/certs
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 256M

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000/api/health',
        ]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s

    networks:
      - iot-network

  # PostgreSQL Database - optimized
  postgres:
    image: postgres:15-alpine
    container_name: iot-postgres
    restart: unless-stopped

    environment:
      - POSTGRES_DB=iot_hub
      - POSTGRES_USER=iot_user
      - POSTGRES_PASSWORD=iot_password
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=
      - POSTGRES_MAX_CONNECTIONS=50

    volumes:
      - postgres-data:/var/lib/postgresql/data

    ports:
      - '5432:5432'

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U iot_user -d iot_hub']
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s

    networks:
      - iot-network

  # Redis - optimized
  redis:
    image: redis:7-alpine
    container_name: iot-redis
    restart: unless-stopped

    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru

    volumes:
      - redis-data:/data

    ports:
      - '6379:6379'

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M

    networks:
      - iot-network

volumes:
  emqx-data:
    driver: local
  emqx-log:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  nx-cache:
    driver: local
  iot-hub-certs:
    external: true
    name: iot-hub-certs

networks:
  iot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
