import { Injectable, OnModuleInit, OnModuleDestroy, Logger } from '@nestjs/common';
import { ConfigService } from '../../config/config.service';
import { OpenTelemetryConfig } from './types';

@Injectable()
export class OtelService implements OnModuleInit, OnModuleDestroy {
  private config: OpenTelemetryConfig;
  private readonly logger = new Logger(OtelService.name);

  constructor(private readonly configService: ConfigService) {
    this.config = this.configService.getOpenTelemetryConfig();
  }

  async onModuleInit() {
    // OpenTelemetry —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ instrumentation.ts
    // –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ —É—Ç–∏–ª–∏—Ç—ã
    console.log(
      'üìä OtelService: –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ ConfigService, SDK —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω'
    );
    console.log(`üìç Collector URL: ${this.config.collectorUrl}`);
    console.log(`üè∑Ô∏è  –°–µ—Ä–≤–∏—Å: ${this.config.serviceName}`);
    console.log(
      `üìä –ú–µ—Ç—Ä–∏–∫–∏: ${this.config.metrics.enabled ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}`
    );
    console.log(
      `üîÑ –¢—Ä–µ–π—Å—ã: ${this.config.tracing.enabled ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}`
    );
    console.log(
      `üìù –õ–æ–≥–∏: ${this.config.logging.enabled ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}`
    );
  }

  async onModuleDestroy() {
    // Graceful shutdown –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ instrumentation.ts
    console.log('üìä OtelService: –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã');
  }

  getConfig(): OpenTelemetryConfig {
    return { ...this.config };
  }

  isInitialized(): boolean {
    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤—Å–µ–≥–¥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ instrumentation.ts
    return this.config.enabled;
  }

  getEndpoints() {
    return this.config.endpoints;
  }

  getServiceName(): string {
    return this.config.serviceName;
  }

  getCollectorUrl(): string {
    return this.config.collectorUrl;
  }

  isEnabled(): boolean {
    return this.config.enabled;
  }

  isTracingEnabled(): boolean {
    return this.config.enabled && this.config.tracing.enabled;
  }

  isMetricsEnabled(): boolean {
    return this.config.enabled && this.config.metrics.enabled;
  }

  isLoggingEnabled(): boolean {
    return this.config.enabled && this.config.logging.enabled;
  }

  getResourceAttributes(): Record<string, string> {
    return { ...this.config.resourceAttributes };
  }

  async shutdown() {
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    console.log(
      'üìä OtelService: shutdown –≤—ã–∑–≤–∞–Ω (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ instrumentation.ts)'
    );
  }
}
