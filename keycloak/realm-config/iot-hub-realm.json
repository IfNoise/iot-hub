{
  "realm": "iot-hub",
  "displayName": "IoT Hub",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>IoT Hub</span></div>",
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "rememberMe": true,
  "verifyEmail": true,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "internationalizationEnabled": true,
  "supportedLocales": ["en", "ru"],
  "defaultLocale": "ru",
  "loginTheme": "iot-hub",
  "adminTheme": "keycloak",
  "accountTheme": "iot-hub",
  "emailTheme": "iot-hub",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "cibaAuthRequestedUserHint": "login_hint",
    "parRequestUriLifespan": "60",
    "frontendUrl": "",
    "displayName": "IoT Hub",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>IoT Hub</span></div>"
  },
  "users": [
    {
      "username": "admin",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "email": "admin@iot-hub.local",
      "firstName": "System",
      "lastName": "Administrator",
      "credentials": [
        {
          "type": "password",
          "value": "admin123",
          "temporary": false
        }
      ],
      "realmRoles": [
        "default-roles-iot-hub",
        "offline_access",
        "uma_authorization",
        "view-account"
      ],
      "attributes": {
        "account_type": ["enterprise"],
        "organization_role": ["owner"],
        "billing_plan": ["enterprise"],
        "subscription_status": ["active"]
      }
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "personal-user",
        "description": "Personal user role"
      },
      {
        "name": "enterprise-user",
        "description": "Enterprise user role"
      },
      {
        "name": "organization-owner",
        "description": "Organization owner role"
      },
      {
        "name": "organization-admin",
        "description": "Organization administrator role"
      },
      {
        "name": "organization-billing-manager",
        "description": "Organization billing manager role"
      },
      {
        "name": "organization-user",
        "description": "Organization user role"
      },
      {
        "name": "group-admin",
        "description": "Group administrator role"
      },
      {
        "name": "group-manager",
        "description": "Group manager role"
      },
      {
        "name": "group-user",
        "description": "Group user role"
      },
      {
        "name": "billing-admin",
        "description": "Billing system administrator"
      },
      {
        "name": "view-account",
        "description": "Allows access to account endpoints"
      }
    ]
  },
  "groups": [
    {
      "name": "personal-users",
      "path": "/personal-users"
    },
    {
      "name": "enterprise-users",
      "path": "/enterprise-users"
    },
    {
      "name": "organizations",
      "path": "/organizations"
    }
  ],
  "clients": [
    {
      "clientId": "iot-hub-backend",
      "name": "IoT Hub Backend",
      "description": "Backend service client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "iot-hub-backend-secret",
      "redirectUris": ["http://localhost:3000/*"],
      "webOrigins": ["http://localhost:3000"],
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "account_type",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "account_type",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "account_type",
            "jsonType.label": "String"
          }
        },
        {
          "name": "organization_id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "organization_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization_id",
            "jsonType.label": "String"
          }
        },
        {
          "name": "billing_plan",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "billing_plan",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "billing_plan",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "roles", "profile", "email"],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "iot-hub-frontend",
      "name": "IoT Hub Frontend",
      "description": "Frontend application client",
      "enabled": true,
      "publicClient": true,
      "redirectUris": ["http://localhost:4200/*", "http://localhost:3000/*"],
      "webOrigins": ["http://localhost:4200", "http://localhost:3000"],
      "protocol": "openid-connect",
      "fullScopeAllowed": true,
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "defaultClientScopes": ["web-origins", "roles", "profile", "email"],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "account",
      "protocol": "openid-connect",
      "attributes": {}
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "account"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": true,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [
    "SEND_VERIFY_EMAIL",
    "SEND_RESET_PASSWORD",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_CONSENT_ERROR",
    "LOGIN_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "LOGOUT",
    "REGISTER",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "UPDATE_PASSWORD",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN",
    "RESTART_AUTHENTICATION",
    "IMPERSONATE_ERROR",
    "INVALID_SIGNATURE",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL",
    "CLIENT_UPDATE_ERROR",
    "UPDATE_PROFILE_ERROR",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE",
    "UPDATE_CONSENT",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "RESET_PASSWORD",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "UPDATE_PROFILE",
    "AUTHREQID_TO_TOKEN",
    "AUTHREQID_TO_TOKEN_ERROR",
    "CODE_TO_TOKEN"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "config": {
          "priority": ["100"]
        }
      },
      {
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "config": {
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      },
      {
        "name": "aes-generated",
        "providerId": "aes-generated",
        "config": {
          "priority": ["100"]
        }
      }
    ]
  },
  "authenticationFlows": [],
  "authenticatorConfig": [],
  "requiredActions": [],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "keycloakVersion": "23.0.0"
}
