# EMQX Configuration for Strict MQTT Architecture Separation
# Конфигурация EMQX для строгого разделения:
# - Устройства: ТОЛЬКО mTLS на порту 8883 с обязательными клиентскими сертификатами
# - Backend: TCP на 1883 (dev) без аутентификации, TLS на 8883 (prod) без клиентских сертификатов

# =============================================================================
# TCP Configuration for Backend (Development)
# =============================================================================

## TCP listener for mqtt protocol on port 1883 (Backend only)
## Настроен для backend в development окружении - БЕЗ аутентификации
listeners.tcp.default {
  bind = "0.0.0.0:1883"
  max_connections = 1024000
  ## Отключить аутентификацию для backend TCP подключений
  enable_authn = false
}

## WebSocket listener for HTTP dashboard and WebSocket MQTT
listeners.ws.default {
  bind = "0.0.0.0:8083"
  max_connections = 1024000
  enable_authn = false
}

# =============================================================================
# Dashboard Configuration
# =============================================================================

dashboard {
  listeners.http {
    bind = "0.0.0.0:18083"
  }
  default_username = "admin"
  default_password = "iot-hub-admin"
}

# =============================================================================
# Disable WSS Listener (не нужен для нашей архитектуры)
# =============================================================================

listeners.wss.default {
  enable = false
}

# =============================================================================
# SSL/TLS Configuration for Devices (mTLS) and Backend (TLS)
# =============================================================================

## SSL listener for mqtts protocol on port 8883
## Обслуживает устройства с обязательными клиентскими сертификатами
listeners.ssl.default {
  bind = "0.0.0.0:8883"
  max_connections = 1024000
  ssl_options {
    ## CA сертификат для проверки клиентских сертификатов устройств
    cacertfile = "/opt/emqx/etc/certs/ca-cert.pem"
    ## Серверный сертификат для TLS
    certfile = "/opt/emqx/etc/certs/server-cert.pem"
    keyfile = "/opt/emqx/etc/certs/server-key-pkcs8.pem"
    ## Обязательно проверяем клиентский сертификат для устройств
    verify = verify_peer
    ## Требуем клиентский сертификат (для устройств обязательно)
    fail_if_no_peer_cert = true
    versions = ["tlsv1.3", "tlsv1.2"]
    ciphers = [
    "ECDHE-ECDSA-AES256-GCM-SHA384",
    "ECDHE-RSA-AES256-GCM-SHA384",
    "ECDHE-ECDSA-AES128-GCM-SHA256",
    "ECDHE-RSA-AES128-GCM-SHA256"
    ]
    depth = 10
  }
}

# =============================================================================
# Authentication Configuration - HTTP валидация для устройств
# =============================================================================

## Глобальная авторизация - разрешить всё
authorization {
  no_match = allow
  deny_action = ignore
  cache {
    enable = true
    max_size = 32
    ttl = 1m
  }
  sources = []
}

## Настройка слушателя SSL с HTTP-аутентификацией для устройств с клиентскими сертификатами
listeners.ssl.default.authentication = [ {
  ## HTTP-based authentication для mTLS устройств
  mechanism = password_based
  backend = http
  enable = true
  method = post
  url = "http://iot-backend:3000/api/devices/certificates/validate"
  headers {
    "accept" = "application/json"
    "content-type" = "application/json"
  }
  body {
    clientid = "${clientid}"
    username = "${username}"
    password = "${password}"
    cert_common_name = "${cert_common_name}"
    cert_subject = "${cert_subject}"
  }
  connect_timeout = 5s
  request_timeout = 5s
  ssl {
    enable = false
  }
}
]

## Глобальная аутентификация отключена - каждый слушатель настраивается отдельно
authentication = []

# =============================================================================
# Logging Configuration
# =============================================================================

log {
  console_handler {
    level = "debug"
    enable = true
  }
  file_handlers.default {
    level = "debug"
    file = "/opt/emqx/log/emqx.log"
  }
}

# =============================================================================
# Performance Configuration
# =============================================================================

node {
  name = "emqx@127.0.0.1"
  cookie = "emqxsecretcookie"
  data_dir = "/opt/emqx/data"
  process_limit = 2097152
  max_ports = 1048576
  max_ets_tables = 262144
}