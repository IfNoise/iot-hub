# EMQX Configuration for mTLS IoT Device Authentication
# Файл конфигурации для настройки EMQX с поддержкой mTLS аутентификации

# =============================================================================
# SSL/TLS Configuration for mTLS
# =============================================================================

## SSL listener for mqtts protocol on port 8883
listeners.ssl.default {
  bind = "0.0.0.0:8883"

  ## Maximum number of concurrent connections
  max_connections = 1024000

  ## SSL options
  ssl_options {
    ## Path to the CA certificate file (generated by IoT Hub)
    cacertfile = "/opt/emqx/etc/certs/ca-cert.pem"

    ## Path to the server certificate file
    certfile = "/opt/emqx/etc/certs/server-cert.pem"

    ## Path to the server private key file
    keyfile = "/opt/emqx/etc/certs/server-key.pem"

    ## Require client certificate (mTLS)
    verify = verify_peer

    ## Fail if client doesn't provide certificate
    fail_if_no_peer_cert = true

    ## SSL versions
    versions = ["tlsv1.3", "tlsv1.2"]

    ## Cipher suites
    ciphers = [
    "ECDHE-ECDSA-AES256-GCM-SHA384",
    "ECDHE-RSA-AES256-GCM-SHA384",
    "ECDHE-ECDSA-AES256-SHA384",
    "ECDHE-RSA-AES256-SHA384",
    "ECDHE-ECDSA-AES128-GCM-SHA256",
    "ECDHE-RSA-AES128-GCM-SHA256"
    ]

    ## Certificate depth
    depth = 10

    ## Password for private key (if encrypted)
    # password = "your_password_here"
  }
}

# =============================================================================
# Authentication Configuration
# =============================================================================

## HTTP Authentication for certificate validation
authentication = [ {
  mechanism = http
  method = post
  url = "http://localhost:3000/api/devices/certificates/validate"
  headers {
    "Content-Type" = "application/json"
    "Accept" = "application/json"
  }

  ## Request body template
  body {
    username = "${username}"
    clientid = "${clientid}"
    peercert = "${peercert}"
    ## Certificate fingerprint for validation
    fingerprint = "${ssl_cert_subject_hash}"
  }

  ## HTTP client options
  request_timeout = "5s"
  retry_interval = "3s"
  max_retries = 3

  ## Authentication result mapping
  response_mapping {
    result = "${body.valid}"
    is_superuser = false
  }
}
]

# =============================================================================
# Authorization Configuration
# =============================================================================

## HTTP Authorization for device permissions
authorization = {
  sources = [ {
    type = http
    method = post
    url = "http://localhost:3000/api/devices/authorize"
    headers {
      "Content-Type" = "application/json"
    }

    body {
      username = "${username}"
      clientid = "${clientid}"
      action = "${action}"
      topic = "${topic}"
      peercert = "${peercert}"
    }

    request_timeout = "5s"
  }
  ]

  ## Default permissions (deny all)
  default_action = deny
}

# =============================================================================
# Logging Configuration
# =============================================================================

## SSL/TLS specific logging
log {
  level = info

  ## Log SSL handshake details for debugging
  ssl_handshake_log = on

  ## File handlers
  file {
    handlers.ssl {
      file = "/opt/emqx/log/ssl.log"
      level = debug
      formatter = text
      enable = true
    }
  }
}

# =============================================================================
# Zone Configuration for SSL Clients
# =============================================================================

## Zone for SSL/mTLS clients
zones.ssl_zone {
  ## Idle timeout for SSL connections
  idle_timeout = 30s

  ## Enable statistics
  enable_stats = true

  ## Enable ACL (Access Control List)
  enable_acl = true

  ## Force GC after this many messages
  force_gc_policy = 16000

  ## Force shutdown policy
  force_shutdown_policy = 8000

  ## Max packet size
  max_packet_size = "1MB"

  ## Max clientid length
  max_clientid_len = 65535

  ## Max topic levels
  max_topic_levels = 128

  ## Max QoS allowed
  max_qos_allowed = 2

  ## Retain available
  retain_available = true

  ## Wildcard subscription available
  wildcard_subscription = true

  ## Shared subscription available
  shared_subscription = true

  ## Maximum topic alias
  max_topic_alias = 65535
}

# =============================================================================
# Webhook Configuration for Certificate Events
# =============================================================================

## Webhook for certificate validation events
webhook {
  url = "http://localhost:3000/api/devices/webhook/certificate"

  ## Events to trigger webhook
  events = [
  "client.connected",
  "client.disconnected",
  "client.authenticate",
  "session.created",
  "session.terminated"
  ]

  ## HTTP options
  method = post
  headers {
    "Content-Type" = "application/json"
  }

  ## Request body template
  body = """ {
    "event": "${event}",
    "clientid": "${clientid}",
    "username": "${username}",
    "timestamp": $ {
      timestam
    }
    ,
    "peercert": "${peercert}",
    "node": "${node}"
  }
  """

  ## Pool settings
  pool_size = 32
  request_timeout = "5s"
}

# =============================================================================
# MQTT Protocol Settings
# =============================================================================

## MQTT protocol settings for SSL zone
mqtt {
  ## Idle timeout
  idle_timeout = "15s"

  ## Max packet size
  max_packet_size = "1MB"

  ## Max clientid length
  max_clientid_len = 65535

  ## Max topic length
  max_topic_len = 65535

  ## Strict mode
  strict_mode = false

  ## Response information
  response_information = ""

  ## Server keep alive
  server_keepalive = {
    backoff = 0.75
  }

  ## Keep alive multiplier
  keepalive_multiplier = 1.25

  ## Max subscriptions per client
  max_subscriptions = 0

  ## Upgrade QoS
  upgrade_qos = false

  ## Max inflight
  max_inflight = 128

  ## Retry interval
  retry_interval = "20s"

  ## Max awaiting PUBREL
  max_awaiting_rel = 1000

  ## Await PUBREL timeout
  await_rel_timeout = "20s"

  ## Session expiry interval
  session_expiry_interval = "2h"

  ## Max mqueue length
  max_mqueue_len = 1000

  ## Mqueue priorities
  mqueue_priorities = disabled

  ## Mqueue default priority
  mqueue_default_priority = lowest

  ## Mqueue store QoS0
  mqueue_store_qos0 = true
}

# =============================================================================
# Performance Tuning
# =============================================================================

## Node settings for better SSL performance
node {
  ## Process limit
  process_limit = 2097152

  ## Max ports
  max_ports = 1048576

  ## Distributed buffer size
  dist_buffer_size = 8192

  ## Max ETS tables
  max_ets_tables = 262144

  ## Heartbeat interval
  heartbeat_interval = "30s"

  ## SSL handshake timeout
  ssl_handshake_timeout = "15s"
}

## System tuning
system {
  ## Scheduler settings
  schedulers {
    utilization_limit = 80
    compaction_of_load = true
  }

  ## Memory settings
  memory {
    ## System memory watermark
    watermark = 85

    ## Process memory limit
    process_limit = "2GB"
  }
}
