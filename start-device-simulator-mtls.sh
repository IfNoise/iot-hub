#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ device-simulator —Å mTLS
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./start-device-simulator-mtls.sh [device-id] [user-id] [backend-url]

set -e

DEVICE_ID=${1:-"test-device-001"}
USER_ID=${2:-"550e8400-e29b-41d4-a716-446655440000"}
BACKEND_URL=${3:-"http://localhost:3000"}
MQTT_HOST=${4:-"localhost"}
MQTT_SECURE_PORT=${5:-"8883"}

echo "üöÄ –ó–∞–ø—É—Å–∫ Device Simulator —Å mTLS"
echo "   üì± Device ID: $DEVICE_ID"
echo "   üë§ User ID: $USER_ID"
echo "   üåê Backend URL: $BACKEND_URL"
echo "   üîê MQTT Host: $MQTT_HOST:$MQTT_SECURE_PORT"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ backend –¥–æ—Å—Ç—É–ø–µ–Ω
echo
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ backend..."
if ! curl -f -s "$BACKEND_URL/api/health" > /dev/null; then
  echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: $BACKEND_URL"
  echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω:"
  echo "   npm run serve:backend"
  exit 1
fi
echo "‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ EMQX –∑–∞–ø—É—â–µ–Ω
echo
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ EMQX..."
if ! nc -z "$MQTT_HOST" "$MQTT_SECURE_PORT" 2>/dev/null; then
  echo "‚ùå EMQX –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: $MQTT_HOST:$MQTT_SECURE_PORT"
  echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ EMQX –∑–∞–ø—É—â–µ–Ω —Å mTLS:"
  echo "   docker-compose up -d emqx"
  exit 1
fi
echo "‚úÖ EMQX –¥–æ—Å—Ç—É–ø–µ–Ω"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
CERTS_DIR="./apps/device-simulator/certs"
mkdir -p "$CERTS_DIR"

echo
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
CERT_FILES=(
  "$CERTS_DIR/${DEVICE_ID}-client-cert.pem"
  "$CERTS_DIR/${DEVICE_ID}-client-key.pem"
  "$CERTS_DIR/${DEVICE_ID}-ca-cert.pem"
)

ALL_CERTS_EXIST=true
for cert_file in "${CERT_FILES[@]}"; do
  if [[ ! -f "$cert_file" ]]; then
    ALL_CERTS_EXIST=false
    break
  fi
done

if [[ "$ALL_CERTS_EXIST" == "true" ]]; then
  echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ $DEVICE_ID –Ω–∞–π–¥–µ–Ω—ã"
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
  if openssl x509 -in "$CERTS_DIR/${DEVICE_ID}-client-cert.pem" -checkend 86400 -noout > /dev/null; then
    echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω"
  else
    echo "‚ö†Ô∏è  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –∏–ª–∏ —É–∂–µ –∏—Å—Ç–µ–∫"
    echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
  fi
else
  echo "üìù –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, device-simulator –ø–æ–ª—É—á–∏—Ç –∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"
fi

echo
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è device-simulator
export DEVICE_ID="$DEVICE_ID"
export USER_ID="$USER_ID"
export BACKEND_URL="$BACKEND_URL"
export MQTT_HOST="$MQTT_HOST"
export MQTT_SECURE_PORT="$MQTT_SECURE_PORT"
export USE_MTLS="true"
export CERTS_DIR="$CERTS_DIR"
export SENSOR_UPDATE_INTERVAL="60000"  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ–Ω—Å–æ—Ä–æ–≤ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:"
echo "   DEVICE_ID=$DEVICE_ID"
echo "   USER_ID=$USER_ID"
echo "   BACKEND_URL=$BACKEND_URL"
echo "   MQTT_HOST=$MQTT_HOST"
echo "   MQTT_SECURE_PORT=$MQTT_SECURE_PORT"
echo "   USE_MTLS=$USE_MTLS"
echo "   CERTS_DIR=$CERTS_DIR"

echo
echo "üöÄ –ó–∞–ø—É—Å–∫ Device Simulator..."
echo "Device Simulator –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:"
echo "   1. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª—é—á–µ–≤—É—é –ø–∞—Ä—É –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º —á–∏–ø–µ"
echo "   2. –°–æ–∑–¥–∞—Å—Ç CSR (Certificate Signing Request)"
echo "   3. –û—Ç–ø—Ä–∞–≤–∏—Ç CSR –Ω–∞ backend –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è"
echo "   4. –ü–æ–ª—É—á–∏—Ç –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
echo "   5. –ü–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ EMQX —á–µ—Ä–µ–∑ mTLS"

echo
echo "üìä –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
echo "   üåê EMQX Dashboard: http://localhost:18083 (admin/iot-hub-admin)"
echo "   üì± Device Simulator API: http://localhost:3001/api/simulator"
echo "   üîô Backend API: $BACKEND_URL/api"

echo
echo "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..."

# –ó–∞–ø—É—Å–∫–∞–µ–º device-simulator
nx serve device-simulator